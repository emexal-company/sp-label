{"version":3,"file":"label.component.js","sourceRoot":"","sources":["../src/label.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,aAAa,EAAG,QAAQ,EAAE,MAAM,aAAa,CAAC;AAE5D,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAEzC,OAAO,WAAW,MAAM,gBAAgB,CAAC;AACzC,OAAO,gBAAgB,MAAM,kBAAkB,CAAC;AAGhD,IAAa,KAAK,GAAlB,MAAa,KAAM,SAAQ,IAAI;IAA/B;;QAGsC,SAAI,GAAY,KAAK,CAAC;QACtB,QAAG,GAAY,KAAK,CAAC;QACrB,WAAM,GAAY,KAAK,CAAC;QACxB,WAAM,GAAY,KAAK,CAAC;QACxB,YAAO,GAAY,KAAK,CAAC;QACzB,UAAK,GAAY,KAAK,CAAC;QACvB,WAAM,GAAY,KAAK,CAAC;QACxB,aAAQ,GAAY,KAAK,CAAC;QAC1B,UAAK,GAAY,KAAK,CAAC;QACvB,UAAK,GAAY,KAAK,CAAC;QACvB,UAAK,GAAW,EAAE,CAAC;IAMzD,CAAC;IAHW,MAAM;QACd,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;CACF,CAAA;AAlBe,qBAAe,GAAG,CAAE,WAAW,EAAG,GAAG,CAAA,0CAA0C,CAAE,CAAC;AAEnE;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;mCAA8B;AAC7B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;kCAA6B;AAC5B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;qCAAgC;AAC/B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;qCAAgC;AAC/B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;sCAAiC;AAChC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;oCAA+B;AAC9B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;qCAAgC;AAC/B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;uCAAkC;AACjC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;oCAA+B;AAC9B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;oCAA+B;AAC9B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;oCAA4B;AAb5C,KAAK;IADjB,aAAa,CAAC,UAAU,CAAC;GACb,KAAK,CAmBjB;SAnBY,KAAK","sourcesContent":["import { css, customElement,  property } from 'lit-element';\r\n\r\nimport { Base } from '@spectrum/sp-base';\r\n\r\nimport labelStyles from './label.styles';\r\nimport standardTemplate from './label.template';\r\n\r\n@customElement('sp-label')\r\nexport class Label extends Base {\r\n  public static componentStyles = [ labelStyles , css`.spectrum-Label { color: var(--color); }` ];\r\n\r\n  @property({ type: Boolean }) public grey: boolean = false;\r\n  @property({ type: Boolean }) public red: boolean = false;\r\n  @property({ type: Boolean }) public orange: boolean = false;\r\n  @property({ type: Boolean }) public yellow: boolean = false;\r\n  @property({ type: Boolean }) public seafoam: boolean = false;\r\n  @property({ type: Boolean }) public green: boolean = false;\r\n  @property({ type: Boolean }) public active: boolean = false;\r\n  @property({ type: Boolean }) public inactive: boolean = false;\r\n  @property({ type: Boolean }) public small: boolean = false;\r\n  @property({ type: Boolean }) public large: boolean = false;\r\n  @property({ type: String })  public label: string = '';\r\n \r\n\r\n  protected render() {\r\n    return standardTemplate.call(this);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-label': Label;\r\n  }\r\n}\r\n"]}